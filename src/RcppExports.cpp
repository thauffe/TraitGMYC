// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mvrnormArma
arma::mat mvrnormArma(int n, arma::mat mu, arma::mat sigma);
RcppExport SEXP _TraitGMYC_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// colMeansArma
arma::rowvec colMeansArma(Rcpp::NumericMatrix x);
RcppExport SEXP _TraitGMYC_colMeansArma(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(colMeansArma(x));
    return rcpp_result_gen;
END_RCPP
}
// meansAfterMvrnormDraw
arma::rowvec meansAfterMvrnormDraw(int n, arma::mat mu, arma::mat sigma);
RcppExport SEXP _TraitGMYC_meansAfterMvrnormDraw(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(meansAfterMvrnormDraw(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// getMvrnormMeansAfterTime
arma::mat getMvrnormMeansAfterTime(int tt, int n, arma::mat mu, arma::mat sigma);
RcppExport SEXP _TraitGMYC_getMvrnormMeansAfterTime(SEXP ttSEXP, SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(getMvrnormMeansAfterTime(tt, n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// notWorking
arma::mat notWorking(int tt, int n, arma::mat mu, arma::mat sigma);
RcppExport SEXP _TraitGMYC_notWorking(SEXP ttSEXP, SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(notWorking(tt, n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TraitGMYC_mvrnormArma", (DL_FUNC) &_TraitGMYC_mvrnormArma, 3},
    {"_TraitGMYC_colMeansArma", (DL_FUNC) &_TraitGMYC_colMeansArma, 1},
    {"_TraitGMYC_meansAfterMvrnormDraw", (DL_FUNC) &_TraitGMYC_meansAfterMvrnormDraw, 3},
    {"_TraitGMYC_getMvrnormMeansAfterTime", (DL_FUNC) &_TraitGMYC_getMvrnormMeansAfterTime, 4},
    {"_TraitGMYC_notWorking", (DL_FUNC) &_TraitGMYC_notWorking, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_TraitGMYC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
